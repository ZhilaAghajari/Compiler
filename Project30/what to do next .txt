-run mohammad and gitproj project --> Mohamed code did not run and ended up with an semantic error
+see mohammad code and new files we need to consider
+see mohamed grammer code and differences with new grammar in proj3 (especially for part "Syntax Tree Augmentation" in page4 ) --> No difference
-do the above for gitproj
	-int error=0 added to grammar.y and it is returned at the yyerror() of this file
+compare gitproj and mohammad
+see what changes we need for proj3.c and proj3.h using both codes we have
	+git proj --> insert entry(241)  // LookUpField(311) // findclass(we don have it) 
	moh+ammad proj --> in our proj3.c 417 mohammad commented that printf

-start coding
	-static semantic in page 1 and 6 other rules in page 2 must be met
	-symbol table (proj3.c)
	-files -->  semantic_analysis.c // 
	-STRING_ASSIGN (proj3.c 195 must be completed, and it is not in other codes)
	-correct result on error files
	-shuffle codes and lines and functions based on semanticAnalyzor



Changes for Grammar.y
1-DeclarationNum --> DeclarationsNum
2-root --> DisplayTree (SemanticAnalysis.c)

Changes for Proj3.h/proj3.c
1-String_MIS -> STRING_ASSIGN (proj3.h)
2-int LookUpField(int, int); added to proj3.h
3-finding main in insertEntry function has been removed (proj3.c)
4-lookuphere added to proj3.c


***
3-treeNode & type in final print is missing










Replacment table;

file name            ours      			mohammad     	git
proj3.c,proj3.h      PARAMETER_CONFLICT	FUNC_PARAM_MIS	-
semantic_analysis.c  semanticAnalyzor	makesyntaxtree  
proj2.c 			 NodeKindSet		-				SetNodeKind
					 InternalValue		-				SetIntVal
					 ChangeValue		-				MakeVal
					 NodeOp				-				SetNodeOp